<?php

// ===========================================================================================
//
// Class CCaptcha
//
// Provides Captcha.
// 
// The getAsHTML()-method shall be used by the FORM-page.
// The validateInput()-method and getErrorMsg()-method shall be used by the FORM-processing page.
// 
// Author: Mats Ljungquist
//
abstract class captcha_CCaptcha {
    
        protected $errorMsg = "";

	// ------------------------------------------------------------------------------------
	//
	// Internal variables
	//

	// ------------------------------------------------------------------------------------
	//
	// Constructor
        //
	private function __construct() {
	}


	// ------------------------------------------------------------------------------------
	//
	// Destructor
	//
	public function __destruct() {
	}
        
        // ------------------------------------------------------------------------------------
	//
	// Factory method(ish) pattern
        // 
        // @param which captcha utility to use. Defaults to define WS_CAPTCHA (if exists).
        // @return a captcha instance
        public static function getInstance($aCaptcha = "") {
            $aCaptcha = empty($aCaptcha) && defined('WS_CAPTCHA') ? WS_CAPTCHA : $aCaptcha;
            switch ($aCaptcha) {
                case 'securimage':
                    // Using the captcha 'secureimage'
                    return new captcha_CCaptchaSecurimage();
                    break;
                default:
                    // dummy = no captcha
                    return new captcha_CCaptchaDummy();
                    break;
            }
        }
        
        // ------------------------------------------------------------------------------------
	//
	// Retrieves the error message generated by the captcha.
        // 
        // @return the error message
        public function getErrorMsg() {
            return $this -> errorMsg;
        }

        // ------------------------------------------------------------------------------------
	//
	// Returns the captcha presentation in html form.
        // ALERT! This has to be a part of a form and a session must exist (session_start())
        // 
	// @return the captcha in HTML form
        public function getAsHTML() {
            $display = $this -> displayHTML();
            if (!empty($display)) {
                return "<div class='captcha'>" . $display . "</div>";
            } else {
                return "";
            }
        }
        
        // ------------------------------------------------------------------------------------
	//
	// Returns captcha HTML
        // 
        // @return the captcha in HTML form
        protected abstract function displayHTML();
        
        // ------------------------------------------------------------------------------------
	//
	// Validates captcha. I the captcha does not validate
        // false is returned and an error message is generated and placed in $this -> errorMsg.
        // 
        // This method has to be called in the form process page (the page referred to by the action attribute).
        // Always perform this validation after all other form validations, and of course, before
        // going for the database.
        // 
        // @return true if captcha validates otherwise false.
        abstract function validateInput();

} // End of Of Class

?>